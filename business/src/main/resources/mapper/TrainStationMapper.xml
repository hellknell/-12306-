<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heyu.train.business.mapper.TrainStationMapper">
  <resultMap id="BaseResultMap" type="com.heyu.train.business.domain.TrainStation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="train_code" jdbcType="VARCHAR" property="trainCode" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="name_pinyin" jdbcType="VARCHAR" property="namePinyin" />
    <result column="in_time" jdbcType="TIME" property="inTime" />
    <result column="out_time" jdbcType="TIME" property="outTime" />
    <result column="stop_time" jdbcType="TIME" property="stopTime" />
    <result column="km" jdbcType="DECIMAL" property="km" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, train_code, index, name, name_pinyin, in_time, out_time, stop_time, km, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train_station
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from train_station
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.heyu.train.business.domain.TrainStation">
    insert into train_station (id, train_code, `index`,
      name, name_pinyin, in_time, 
      out_time, stop_time, km, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{trainCode,jdbcType=VARCHAR}, #{index,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{namePinyin,jdbcType=VARCHAR}, #{inTime,jdbcType=TIME}, 
      #{outTime,jdbcType=TIME}, #{stopTime,jdbcType=TIME}, #{km,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.heyu.train.business.domain.TrainStation">
    insert into train_station
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="trainCode != null">
        train_code,
      </if>
      <if test="index != null">
        index,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="namePinyin != null">
        name_pinyin,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="stopTime != null">
        stop_time,
      </if>
      <if test="km != null">
        km,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="trainCode != null">
        #{trainCode,jdbcType=VARCHAR},
      </if>
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="namePinyin != null">
        #{namePinyin,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIME},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIME},
      </if>
      <if test="stopTime != null">
        #{stopTime,jdbcType=TIME},
      </if>
      <if test="km != null">
        #{km,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.heyu.train.business.domain.TrainStation">
    update train_station
    <set>
      <if test="trainCode != null">
        train_code = #{trainCode,jdbcType=VARCHAR},
      </if>
      <if test="index != null">
        index = #{index,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="namePinyin != null">
        name_pinyin = #{namePinyin,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIME},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIME},
      </if>
      <if test="stopTime != null">
        stop_time = #{stopTime,jdbcType=TIME},
      </if>
      <if test="km != null">
        km = #{km,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.heyu.train.business.domain.TrainStation">
    update train_station
    set train_code = #{trainCode,jdbcType=VARCHAR},
      index = #{index,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      name_pinyin = #{namePinyin,jdbcType=VARCHAR},
      in_time = #{inTime,jdbcType=TIME},
      out_time = #{outTime,jdbcType=TIME},
      stop_time = #{stopTime,jdbcType=TIME},
      km = #{km,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="list" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
        <include refid="listSql"/>
    </select>
    <sql id="listSql">
        select
        <if test="selectBuilder == null">
            *
        </if>
        <if test="selectBuilder != null">
            <trim prefixOverrides="," suffixOverrides=",">
                ${selectBuilder}
            </trim>
        </if>
        from train_station
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="groupBySql != null">
            group by ${groupBySql}
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="rows != null">
            <if test="offset != null">
                limit ${offset}, ${rows}
            </if>
            <if test="offset == null">
                limit ${rows}
            </if>
        </if>
    </sql>
  <sql id="Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="oredCriteria" item="criteria">
                    <if test="criteria.valid">
                        <if test="criteria.andOrOr">
                            and
                        </if>
                        <if test="!criteria.andOrOr">
                            or
                        </if>
                        <trim prefix="(" prefixOverrides="and | or" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
    <select id="topOne" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
    select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
    </if>
    from train_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>

  <select id="count" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultType="java.lang.Integer">
        <include refid="countSql"/>
    </select>
    <sql id="countSql">
        select count(*) total_count from train_station
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </sql>
  <update id="updateField" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper">
    update train_station 
    set 
    <trim prefixOverrides="," suffixOverrides=",">
         ${example.updateSql} 
      </trim>
     <if test="example.updateSql != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="Update_By_Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.andOrOr">
                        and
                    </if>
                    <if test="!criteria.andOrOr">
                        or
                    </if>
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
   <update id="updateFieldBatch" parameterType="java.util.List">
           <foreach collection="list" index="index" item="example" separator=";">
               update train_station 
                   set 
               <trim prefixOverrides="," suffixOverrides=",">
                   ${example.updateSql} 
               </trim>
               <if test="example != null">
                   <include refid="Update_By_Example_Where_Clause" />
               </if>           </foreach>
  </update>
    <select id="get" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
        select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
 </if>
    from train_station
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <update id="updateBatchSelective" parameterType="java.util.List">
    update train_station
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.id != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.id,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="train_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.trainCode != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.trainCode,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="index = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.index != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.index,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="name_pinyin = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.namePinyin != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.namePinyin,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="in_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.inTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.inTime,jdbcType=TIME}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="out_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.outTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.outTime,jdbcType=TIME}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="stop_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.stopTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.stopTime,jdbcType=TIME}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="km = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.km != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.km,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
  </trim>
  where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
</update>

</mapper>