<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heyu.train.business.mapper.TrainMapper">
  <resultMap id="BaseResultMap" type="com.heyu.train.business.domain.Train">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="start" jdbcType="VARCHAR" property="start" />
    <result column="start_pinyin" jdbcType="VARCHAR" property="startPinyin" />
    <result column="start_time" jdbcType="TIME" property="startTime" />
    <result column="end" jdbcType="VARCHAR" property="end" />
    <result column="end_pinyin" jdbcType="VARCHAR" property="endPinyin" />
    <result column="end_time" jdbcType="TIME" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, type, start, start_pinyin, start_time, end, end_pinyin, end_time, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from train
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.heyu.train.business.domain.Train">
    insert into train (id, code, type, start, 
      start_pinyin, start_time, end, 
      end_pinyin, end_time, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{start,jdbcType=VARCHAR}, 
      #{startPinyin,jdbcType=VARCHAR}, #{startTime,jdbcType=TIME}, #{end,jdbcType=VARCHAR}, 
      #{endPinyin,jdbcType=VARCHAR}, #{endTime,jdbcType=TIME}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.heyu.train.business.domain.Train">
    insert into train
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="startPinyin != null">
        start_pinyin,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="endPinyin != null">
        end_pinyin,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="start != null">
        #{start,jdbcType=VARCHAR},
      </if>
      <if test="startPinyin != null">
        #{startPinyin,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIME},
      </if>
      <if test="end != null">
        #{end,jdbcType=VARCHAR},
      </if>
      <if test="endPinyin != null">
        #{endPinyin,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIME},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.heyu.train.business.domain.Train">
    update train
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=VARCHAR},
      </if>
      <if test="startPinyin != null">
        start_pinyin = #{startPinyin,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIME},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=VARCHAR},
      </if>
      <if test="endPinyin != null">
        end_pinyin = #{endPinyin,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIME},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.heyu.train.business.domain.Train">
    update train
    set code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      start = #{start,jdbcType=VARCHAR},
      start_pinyin = #{startPinyin,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIME},
      end = #{end,jdbcType=VARCHAR},
      end_pinyin = #{endPinyin,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=TIME},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="list" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
        <include refid="listSql"/>
    </select>
    <sql id="listSql">
        select
        <if test="selectBuilder == null">
            *
        </if>
        <if test="selectBuilder != null">
            <trim prefixOverrides="," suffixOverrides=",">
                ${selectBuilder}
            </trim>
        </if>
        from train
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="groupBySql != null">
            group by ${groupBySql}
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="rows != null">
            <if test="offset != null">
                limit ${offset}, ${rows}
            </if>
            <if test="offset == null">
                limit ${rows}
            </if>
        </if>
    </sql>
  <sql id="Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="oredCriteria" item="criteria">
                    <if test="criteria.valid">
                        <if test="criteria.andOrOr">
                            and
                        </if>
                        <if test="!criteria.andOrOr">
                            or
                        </if>
                        <trim prefix="(" prefixOverrides="and | or" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
    <select id="topOne" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
    select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
    </if>
    from train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>

  <select id="count" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultType="java.lang.Integer">
        <include refid="countSql"/>
    </select>
    <sql id="countSql">
        select count(*) total_count from train
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </sql>
  <update id="updateField" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper">
    update train 
    set 
    <trim prefixOverrides="," suffixOverrides=",">
         ${example.updateSql} 
      </trim>
     <if test="example.updateSql != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="Update_By_Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="example.oredCriteria" item="criteria" separator="or">
                    <if test="criteria.andOrOr">
                        and
                    </if>
                    <if test="!criteria.andOrOr">
                        or
                    </if>
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
   <update id="updateFieldBatch" parameterType="java.util.List">
           <foreach collection="list" index="index" item="example" separator=";">
               update train 
                   set 
               <trim prefixOverrides="," suffixOverrides=",">
                   ${example.updateSql} 
               </trim>
               <if test="example != null">
                   <include refid="Update_By_Example_Where_Clause" />
               </if>           </foreach>
  </update>
    <select id="get" parameterType="com.heyu.train.generator.generator.help.MyBatisWrapper" resultMap="BaseResultMap">
        select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
 </if>
    from train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <update id="updateBatchSelective" parameterType="java.util.List">
    update train
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.id != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.id,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.code != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.code,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.type != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.type,jdbcType=CHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="start = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.start != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.start,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="start_pinyin = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.startPinyin != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.startPinyin,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="start_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.startTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.startTime,jdbcType=TIME}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="end = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.end != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.end,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="end_pinyin = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.endPinyin != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.endPinyin,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="end_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.endTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.endTime,jdbcType=TIME}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
  </trim>
  where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
</update>

</mapper>